openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: |
      ScreenVive lets users subscribe to  high-quality content feeds which are polished and filtered by a team of editors . These feeds can be directly used for display on Digital Signage Screens.      
      # url: https://api.screenvive.com/
    url: https://virtserver.swaggerhub.com/yantranet/ScreenVive/1.0.0
info:
  description: This is a API for the ScreenVive Service, exposing authenticated feed urls for consumption.
  version: "1.0.0"
  title: ScreenVive API
  contact:
    email: hello@screenvive.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: moderators
    description: Operations available to content moderators
  - name: users
    description: Operations available to all logged in users
  - name: public
    description: Operations available without access control
paths:
  /feed:
    get:
      tags:
        - users
      summary: Fetches a list of feeds and their metadata
      operationId: getAllFeeds
      description: |
        Fetches a list of feeds along with their metadata, paginated using skip and limit parameters
      parameters:
        - in: query
          name: skip
          description: number of feeds to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of feeds to return
          schema:
            type: integer
            format: int32
            minimum: -1
            maximum: 50
      responses:
        '200': 
          description: Fetch request success with list of feeds for the specified skip and limit parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
  /feed/{feed_id}/item:
    get:
      tags:
        - users
      summary: Fetches a list of items for a particular feed id
      operationId: getAllFeedItems
      description: |
        Fetches a list of feed items, along with their metadata, paginated using skip and limit parameters, for a feed id 
      parameters:
        - in: path
          name: feed_id
          required: true
          description: feed id
          schema:
            type: string
            format: uuid
        - in: query
          name: skip
          description: number of feed items to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of feed items to return
          schema:
            type: integer
            format: int32
            minimum: -1
            maximum: 50
      responses:
        '200': 
          description: Fetch request success with list of feed items for the specified skip and limit parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedItemResponse'
  /feed/item:
    get:
      tags:
        - moderators
      summary: Fetches a list of items that matches the given criteria
      operationId: getReleventFeedItems
      description: |
        Fetches a list of feed items that matches the given criteria, along with their metadata, paginated using skip and limit parameters
      parameters:
        - in: query
          name: skip
          description: number of feed items to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of feed items to return
          schema:
            type: integer
            format: int32
            minimum: -1
            maximum: 50
        - in: query
          name: feed_id
          description: feed id
          schema:
            type: string
            format: uuid
            example: "d290f1ee-6c54-4b01-90e6-d701748f0851"
        - in: query
          name: state
          description: state of feed items can be Oneof AUTO_VERIFIED, AUTO_REJECTED, VERIFIED, REJECTED
          schema:
            type: string
            example: "AUTO_VERIFIED" 
      responses:
        '200': 
          description: Fetch request success with list of feed items for the specified skip and limit parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedItemResponse'
  /user:
    post:
      tags:
        - public
      summary: Creates a new user account.
      operationId: createUser
      description: |
        Creates a new user account from the user details ...
      requestBody:
        description: Details of the User account to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        '201':
          description: User account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: 'invalid input, object invalid'
  /user/{user_id}:
    put:
      tags:
        - users
      summary: Edit a existing user account.
      operationId: createUser.
      description: |
        Creates a new user account from the user details ...
      parameters:
        - in: path
          name: user_id
          required: true
          description: user id
          schema:
            type: string
            format: uuid
      requestBody:
        description: Details of the User account to be changed
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEditRequest'
      responses:
        '201':
          description: User account details changed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: 'invalid input, object invalid'
  /subscription:
    post:
      tags:
        - users
      summary: Create a subscription
      operationId: createSubscription
      description: |
        Create a subscription for the given user_id and feed_id, and return subscription_id in response
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        '201':
          description: Created a subscription successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '400':
          description: 'invalid input, object invalid'
  /subscription/{subscription_id}:
    put:
      tags:
        - users
      summary: Change configuration of a subscription
      operationId: changeConfiguration
      description: |
        Changes the configuration of the subscription for the given subscription_id
      parameters:
        - in: path
          name: subscription_id
          required: true
          description: subscription id
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionConfiguration'
      responses:
        '201':
          description: Changed configuration of a subscription successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
        '400':
          description: 'invalid input, object invalid'
    get:
      tags:
        - users
      summary: Fetch the details of subscription
      operationId: getSubscriptionDetails
      description: |
        Fetch the details of subscription for the given subscription_id
      parameters:
        - in: path
          name: subscription_id
          required: true
          description: subscription id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Fetch request success with the details of subscription for the given subscription_id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
    delete:
      tags:
        - users
      summary: Delete the subscription 
      operationId: deleteSubscription
      description: |
        Delete the subscription for given subscription_id
      parameters:
        - in: path
          name: subscription_id
          required: true
          description: subscription id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully deleted subscription  
  /subscription/{subscription_id}/item/{feed_item_id}:
    post:
      tags:
        - users
      summary: Add a feed item in subscription
      operationId: addSubscriptionFeedItem
      description: |
        Add a feed item with details, in subscription
      parameters:
        - in: path
          name: subscription_id
          required: true
          description: subscription id
          schema:
            type: string
            format: uuid
        - in: path
          name: feed_item_id
          required: true
          description: feed item id
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionItemAddRequest'
      responses:
        '201':
          description: Added the feed item in subscription successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionItem'
        '400':
          description: 'invalid input, object invalid'
    put:
      tags:
        - users
      summary: Change the details of a feed item in subscription
      operationId: editSubscriptionFeedItem
      description: |
        Change the details of a feed item in subscription
      parameters:
        - in: path
          name: subscription_id
          required: true
          description: subscription id
          schema:
            type: string
            format: uuid
        - in: path
          name: feed_item_id
          required: true
          description: feed item id
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionItemEditRequest'
      responses:
        '201':
          description: Changed the details of the feed item in subscription successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionItem'
        '400':
          description: 'invalid input, object invalid'
    delete:
      tags:
        - users
      summary: Delete a feed item in subscription
      operationId: deleteSubscriptionFeedItem
      description: |
        Deletes a feed item with feed_item_id in subscription with subcription_id
      parameters:
        - in: path
          name: subscription_id
          required: true
          description: subscription id
          schema:
            type: string
            format: uuid
        - in: path
          name: feed_item_id
          required: true
          description: feed item id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Deleted the feed item in subscription successfully
  /feed/{feed_id}/item/{feed_item_id}/verify:
    put:
      tags:
        - moderators
      summary: Moderator uses this API to mark a feed item state as VERIFIED after manual verification 
      operationId: verifyFeedItem
      description: |
        Marks the state of feed item as VERIFIED, when Moderator calls this API with feed_id and feed_item_id 
      parameters:
        - in: path
          name: feed_id
          required: true
          description: feed id
          schema:
            type: string
            format: uuid
        - in: path
          name: feed_item_id
          required: true
          description: feed item id
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Request Successfull. Marked the state of feed item as VERIFIED. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedItem'
  /feed/{feed_id}/item/{feed_item_id}/reject:
    put:
      tags:
        - moderators
      summary: Moderator uses this API to mark a feed item state as REJECTED after manual verification 
      operationId: rejectFeedItem
      description: |
        Marks the state of feed item as REJECTED, when Moderator calls this API with feed_id and feed_item_id 
      parameters:
        - in: path
          name: feed_id
          required: true
          description: feed id
          schema:
            type: string
            format: uuid
        - in: path
          name: feed_item_id
          required: true
          description: feed item id
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Request Successfull. Marked the state of feed item as REJECTED. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedItem'
components:
  schemas:
    FeedResponse:
      type: object
      required:
        - total_count
        - items
      properties:
        total_count:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/Feed'
    Feed:
      type: object
      required:
        - id
        - type
        - title
        - item_count
        - executed_date_time
        - refreshed_date_time
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        type:
          type: string
          example: media-rss-feed
        title:
          type: string
          example: International Affairs
        description:
          type: string
          example: Whats making news all around the world
        image:
          type: string
          format: url
        source:
          type: string
          example: Reuters
        language: 
          type: string
          format: language
          example: en_us
        region:
          type: string
          example: US
        categories:
          type: array
          items:
            type: string
            example: news
        configuration:
          $ref: '#/components/schemas/FeedConfiguration'
        item_count:
          type: integer
          format: int32
        executed_date_time:
          type: string
          format: date-time
        refreshed_date_time:
          type: string
          format: date-time
    FeedItemResponse:
      type: object
      required:
        - total_count
        - items
      properties:
        total_count:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: '#/components/schemas/FeedItem'
    FeedItem:
      type: object
      required:
        - id
        - title
        - feed_id
        - created_date_time
        - updated_date_time
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        title:
          type: string
          example: Middle East News
        feed_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        description:
          type: string
          example: Whats making news in the Middle East
        image:
          type: string
          format: url
        excluded:
          type: boolean
          example: false
        created_date_time:
          type: string
          format: date-time
        updated_date_time:
          type: string
          format: date-time
    UserCreateRequest:
      type: object
      required:
        - first_name
        - middle_name
        - last_name
        - email
        - phone1
        - phone1_type
      properties:
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone1:
          type: string
        phone1_type:
          type: string
        phone2:
          type: string
        phone2_type:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        postal:
          type: string
        country:
          type: string
    UserResponse:
      type: object
      required:
        - user_id
        - first_name
        - middle_name
        - last_name
        - email
        - phone1
        - phone1_type
      properties:
        user_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone1:
          type: string
        phone1_type:
          type: string
        phone2:
          type: string
        phone2_type:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        postal:
          type: string
        country:
          type: string      
    UserEditRequest:
      type: object
      properties:
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone1:
          type: string
        phone1_type:
          type: string
        phone2:
          type: string
        phone2_type:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        postal:
          type: string
        country:
          type: string
    SubscriptionRequest:
      type: object
      required:
        - user_id
        - feed_id
        - feed_title
      properties:
        user_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        feed_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        feed_title:
          type: string
        configuration:
          $ref: '#/components/schemas/SubscriptionConfiguration'
        items:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionItem'
    SubscriptionResponse:
      type: object
      required:
        - id
        - user_id
        - feed_id
        - feed_title
        - signed_url
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        user_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        feed_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        feed_title:
          type: string
        signed_url:
          type: string
          format: email
          example: "https://s3.amazonaws.com/mybucket/myimage.png?AWSAccessKeyId=AKISKSD87A3C4&Expires=109838429&Signature=s98df7s8df12f2jo4lfjfs9d0fu0sd9f"
        configuration:
          $ref: '#/components/schemas/SubscriptionConfiguration'
        items:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionItem'
    SubscriptionItemAddRequest:
      type: object
      required:
        - feed_item_title
      properties:
        feed_item_title:
          type: string
        include:
          type: boolean
        exclude:
          type: boolean
    SubscriptionItemEditRequest:
      type: object
      properties:
        include:
          type: boolean
        exclude:
          type: boolean
    SubscriptionItem:
      type: object
      required:
        - feed_item_id
        - feed_item_title
      properties:
        feed_item_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        feed_item_title:
          type: string
        include:
          type: boolean
          example: true
        exclude:
          type: boolean
          example: false
    SubscriptionConfiguration:
      type: object
      properties:
        to_be_decided:
          type: string
    FeedConfiguration:
      type: object
      properties:
        to_be_decided:
          type: string